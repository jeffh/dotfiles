#####################################################
# enable prompt colors
autoload -U colors && colors

# ls colors
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# disable auto-correct, I have perfect typing!
unsetopt correct_all

# history
unsetopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_REDUCE_BLANKS
setopt EXTENDED_HISTORY
setopt NO_CASE_GLOB
HISTSIZE=10000
SAVEHIST=10000

# allow comments in shell
setopt INTERACTIVE_COMMENTS

# support emacs keybindings
bindkey -e

#####################################################
# aliases

ws() {
    echo "$HOME/workspace/$*"
    cd "$HOME/workspace/$*"
}

alias o='open .'
alias gs='git status'
alias gpush='git push origin head'
alias grep='grep --color'

#####################################################
# Completions

fpath=($HOME/.zsh/completion $fpath)
autoload -U compinit
compinit

setopt NO_BEEP # turn off beeping
setopt AUTO_LIST # lways so list when ambiguous autocomplete
unsetopt MENU_COMPLETE
setopt COMPLETE_IN_WORD
setopt ALWAYS_TO_END
setopt AUTOMENU

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

#####################################################

if [ -z "$VIRTUALENVWRAPPER_PYTHON" ]; then
    source /usr/local/bin/virtualenvwrapper_lazy.sh
fi

#####################################################
export WORKON_HOME=$HOME/.virtualenvs

# Customize to your needs...
export PATH=$HOME/.rvm/gems/ruby-1.9.3-p448/bin:$HOME/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin

export EDITOR=`which vim`

source $HOME/.gvm/scripts/gvm
#export GOROOT=/usr/local/Cellar/go/1.1.1
#export GOBIN=$GOROOT/bin
#export GOPATH=$HOME/workspace/gopath

### Include bin dir by default
#export PATH=$PATH:$GOPATH/bin

export PYTHONPATH=.:$PYTHONPATH

source /Users/jeff/.rvm/scripts/rvm
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
PATH=$PATH:/usr/local/share/npm/bin # for npm/node
PATH=$PATH:/usr/local/sbin # for rabbitmq
#####################################################

workon_virtualenv() {
    local curr_dir="${PWD##*/}"
    if [ "$VIRTUAL_ENV" != "$WORKON_HOME/$curr_dir" ]; then
        if [ -d "$WORKON_HOME/$curr_dir" ]; then
            echo "$1%{$fg[red]%}workon $curr_dir%{$reset_color%}$2"
        fi
    fi
}

#####################################################

is_git_repo() {
    git remote 2>/dev/null
    return $?
}

git_status(){
    local output="`git status -s --porcelain 2>/dev/null`"
    local git_stat=""
    for i in \? A D R U C M
    do
        echo $output | grep -q "^ *$i" > /dev/null
        if [ $? -eq 0 ]; then
            git_stat+="$1$i"
        fi
    done
    if [ -n "$git_stat" ]; then
        echo "$2$git_stat$3"
    fi
}

git_branch(){
    local branch=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [ $? ]; then
        echo "$1$branch$2"
    else
        echo ""
    fi
}

repo_status() {
    echo "$1`git_branch``git_status '' ':'`$2"
}

#####################################################

setopt PROMPT_SUBST

# [parent-dir/current-dir] username(repo_status) $
#export PROMPT=$'%(?..%{$fg[red]%}%?%{$reset_color%} )[%{$fg[green]%}%2c%{$reset_color%}] %{$fg[blue]%}%n%{$reset_color%}$(repo_status "(" ")") $ '
# [parent-dir/current-dir] (repo_status) $
export PROMPT=$'%(?..%{$fg[red]%}%?%{$reset_color%} )[%{$fg[green]%}%2c%{$reset_color%}] $(repo_status) $ '

# tell us to use virtualenv if available
export RPROMPT=$'$(workon_virtualenv)'

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

#####################################################
# plugins

##### zsh-autosuggestions
source ~/.zsh/plugins/autosuggestions/autosuggestions.zsh

# Enable autosuggestions automatically
zle-line-init() {
    zle autosuggest-start
}
zle -N zle-line-init

bindkey '^T' autosuggest-toggle

#### END

# added by travis gem
[ -f /Users/jeff/.travis/travis.sh ] && source /Users/jeff/.travis/travis.sh

# nix
[ -d /nix ] && source ~/.nix-profile/etc/profile.d/nix.sh
